# -*- coding: utf-8 -*-
"""Filtro de Píxeles por Color RGB

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XtfX7an_dSXZ9yq8JCEBrW-VR4u4_t6L
"""

!pip install Pillow

from PIL import Image

# Obtener los valores de RGB del usuario
r = int(input("Introduce el valor de rojo (0-255): "))
g = int(input("Introduce el valor de verde (0-255): "))
b = int(input("Introduce el valor de azul (0-255): "))

# Abrir la imagen original
imagen_original = Image.open("/content/rgb.jpeg")

# Convertir la imagen a formato RGB
imagen_rgb = imagen_original.convert("RGB")

# Crear una nueva imagen en blanco del mismo tamaño
nueva_imagen = Image.new("RGB", imagen_rgb.size)

# Recorrer todos los píxeles de la imagen
for x in range(imagen_rgb.width):
    for y in range(imagen_rgb.height):
        # Obtener el valor RGB del píxel actual
        pixel_rgb = imagen_rgb.getpixel((x, y))

        # Verificar si el píxel coincide con el valor de RGB proporcionado
        if pixel_rgb == (r, g, b):
            nueva_imagen.putpixel((x, y), pixel_rgb)
        else:
            nueva_imagen.putpixel((x, y), (255, 255, 255))  # Pintar de blanco

# Guardar la nueva imagen
nueva_imagen.save("nueva_imagen.png")

# Imprimir los valores de RGB ingresados
print(f"Valores de RGB ingresados: ({r}, {g}, {b})")

# Imprimir el tamaño de la imagen original
print(f"Tamaño de la imagen original: {imagen_rgb.size}")

# Recorrer algunos píxeles de la imagen original e imprimir sus valores RGB
for x in range(10):
    for y in range(10):
        pixel_rgb = imagen_rgb.getpixel((x, y))
        print(f"Píxel ({x}, {y}): {pixel_rgb}")